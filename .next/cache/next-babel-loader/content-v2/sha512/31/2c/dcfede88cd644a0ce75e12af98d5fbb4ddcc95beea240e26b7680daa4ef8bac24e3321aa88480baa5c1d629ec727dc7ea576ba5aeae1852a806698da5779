{"ast":null,"code":"// API routes\n// funciton that contains server-side code\n// code in here will never be exposed to the client (so we can include credentials in here without compromising them)\n// functions (typically named 'handler') are triggered whenever a request is sent to this route\n// URL of this file: /api/new-meetup\nimport { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://jameshudson0357:X3O56tkC0LyjxGLH@cluster0.rduh66w.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups'); // insert one new document into this collection\n    // a document is just a javascript object\n    // result will be an object with the automatically generated id and data\n\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result); // close database connection when we're done\n\n    client.close(); // use response object to send back a response\n\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/jameshudson/code/udemy/react/section-23-nextjs-meetups-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,iHAApB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CANyB,CAQzB;AACA;AACA;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAbyB,CAezB;;AACAL,IAAAA,MAAM,CAACS,KAAP,GAhByB,CAkBzB;;AACAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAelB,OAAf","sourcesContent":["// API routes\n\n// funciton that contains server-side code\n// code in here will never be exposed to the client (so we can include credentials in here without compromising them)\n// functions (typically named 'handler') are triggered whenever a request is sent to this route\n\n// URL of this file: /api/new-meetup\n\nimport { MongoClient } from 'mongodb'\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body\n\n    const client = await MongoClient.connect('mongodb+srv://jameshudson0357:X3O56tkC0LyjxGLH@cluster0.rduh66w.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db()\n\n    const meetupsCollection = db.collection('meetups')\n    \n    // insert one new document into this collection\n    // a document is just a javascript object\n    // result will be an object with the automatically generated id and data\n    const result = await meetupsCollection.insertOne(data) \n    \n    console.log(result)\n\n    // close database connection when we're done\n    client.close()\n\n    // use response object to send back a response\n    res.status(201).json({ message: 'Meetup inserted!' })\n  }\n}\n\nexport default handler"]},"metadata":{},"sourceType":"module"}