{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jameshudson/code/udemy/react/section-23-nextjs-meetups-project/pages/[meetupId]/index.jsx\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: \"First Meetup\",\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}; // because this a dynamic page, we also need to export getStaticPaths (would not have to do this if we were using getServerSideProps, only if using getStaticProps on dynamic page)\n\n\nexport async function getStaticPaths() {\n  return {\n    // fallback key tells NextJS whether your paths array contains all supported parameter values or just some of them (false = all, true = not all paths are pre-generated so if user goes to one (i.e. m4), then the server will pre-generate the missing ones dynamically when requests for them are coming in)\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }, {\n      params: {\n        meetupId: 'm2'\n      }\n    }, {\n      params: {\n        meetupId: 'm3'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        id: meetupId,\n        title: 'First Meetup',\n        address: '123 Lane, Europe',\n        description: 'This is the description.'\n      }\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/Users/jameshudson/code/udemy/react/section-23-nextjs-meetups-project/pages/[meetupId]/index.jsx"],"names":["MeetupDetail","MeetupDetailsPage","props","image","address","description","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","console","log","meetupData","id","title"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAED,KAAK,CAACE,OAHjB;AAIE,IAAA,WAAW,EAAEF,KAAK,CAACG;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD,C,CAWA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACL;AACAC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK,EAWL;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KAXK;AAHF,GAAP;AAqBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAzB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,SAAO;AACLR,IAAAA,KAAK,EAAE;AACLa,MAAAA,UAAU,EAAE;AACVZ,QAAAA,KAAK,EAAE,wHADG;AAEVa,QAAAA,EAAE,EAAEN,QAFM;AAGVO,QAAAA,KAAK,EAAE,cAHG;AAIVb,QAAAA,OAAO,EAAE,kBAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD;AAED,eAAeJ,iBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\nconst MeetupDetailsPage = (props) => {\n  return (\n    <MeetupDetail \n      image={props.image}\n      title='First Meetup'\n      address={props.address}\n      description={props.description}\n    />\n  )\n}\n\n// because this a dynamic page, we also need to export getStaticPaths (would not have to do this if we were using getServerSideProps, only if using getStaticProps on dynamic page)\nexport async function getStaticPaths() {\n  return {\n    // fallback key tells NextJS whether your paths array contains all supported parameter values or just some of them (false = all, true = not all paths are pre-generated so if user goes to one (i.e. m4), then the server will pre-generate the missing ones dynamically when requests for them are coming in)\n    fallback: false,\n    paths: [\n      { \n        params: {\n          meetupId: 'm1',\n        }, \n      },  \n      { \n        params: {\n          meetupId: 'm2',\n        }, \n      },  \n      { \n        params: {\n          meetupId: 'm3',\n        }, \n      },  \n    ]\n  }\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  \n  const meetupId = context.params\n\n  console.log(meetupId)\n\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        id: meetupId,\n        title: 'First Meetup',\n        address: '123 Lane, Europe',\n        description: 'This is the description.'\n      }\n    }\n  }\n}\n\nexport default MeetupDetailsPage"]},"metadata":{},"sourceType":"module"}